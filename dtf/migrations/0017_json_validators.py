# Generated by Django 3.1.7 on 2021-03-07 17:00

import collections
from django.db import migrations, models
import dtf.models
import dtf.validators


class Migration(migrations.Migration):

    dependencies = [
        ('dtf', '0016_require_related_fields'),
    ]

    operations = [
        migrations.AlterField(
            model_name='referenceset',
            name='property_values',
            field=models.JSONField(decoder=dtf.models.ReferenceSet.OrderedDictJSONDecoder, default=collections.OrderedDict, validators=[dtf.validators.JSONSchemaValidator(schema={'additionalProperties': {'type': 'string'}, 'schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object'})]),
        ),
        migrations.AlterField(
            model_name='submission',
            name='info',
            field=models.JSONField(default=dict, validators=[dtf.validators.JSONSchemaValidator(schema={'additionalProperties': {'type': 'string'}, 'schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object'})]),
        ),
        migrations.AlterField(
            model_name='testreference',
            name='references',
            field=models.JSONField(default=dict, validators=[dtf.validators.JSONSchemaValidator(schema={'additionalProperties': {'properties': {'ref_id': {'type': 'integer'}, 'value': {'oneOf': [{'type': 'string'}, {'type': 'number'}]}}, 'required': ['value'], 'type': 'object'}, 'schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object'})]),
        ),
        migrations.AlterField(
            model_name='testresult',
            name='results',
            field=models.JSONField(null=True, validators=[dtf.validators.JSONSchemaValidator(schema={'items': {'additionalProperties': False, 'allOf': [{'if': {'properties': {'valuetype': {'const': 'integer'}}}, 'then': {'properties': {'value': {'type': 'integer'}}}}, {'if': {'properties': {'valuetype': {'const': 'float'}}}, 'then': {'properties': {'value': {'type': 'number'}}}}, {'if': {'properties': {'valuetype': {'const': 'string'}}}, 'then': {'properties': {'value': {'type': 'string'}}}}, {'if': {'properties': {'valuetype': {'const': 'list'}}}, 'then': {'properties': {'value': {'type': 'string'}}}}, {'if': {'properties': {'valuetype': {'const': 'image'}}}, 'then': {'properties': {'value': {'contentEncoding': 'base64', 'contentMediaType': 'image/png', 'type': 'string'}}}}], 'properties': {'margin': {'oneOf': [{'type': 'number'}, {'type': 'null'}]}, 'name': {'type': 'string'}, 'reference': {'oneOf': [{'properties': {'ref_id': {'type': 'integer'}, 'value': {'oneOf': [{'type': 'string'}, {'type': 'number'}]}}, 'required': ['value'], 'type': 'object'}, {'type': 'null'}]}, 'status': {'enum': ['skip', 'successful', 'unstable', 'unknown', 'failed', 'broken'], 'type': 'string'}, 'value': {}, 'valuetype': {'enum': ['integer', 'float', 'string', 'list', 'image'], 'type': 'string'}}, 'required': ['name', 'value', 'valuetype'], 'type': 'object'}, 'schema': 'http://json-schema.org/draft-07/schema#', 'type': 'array'})]),
        ),
    ]
